legende <- read_delim("https://raw.githubusercontent.com/LaurentPolitis/Data_Viz_Fin403/master/data/legende.csv",
";", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"),
trim_ws = TRUE)
colnames(population_ville) = legende[colnames(population_ville) == legende$CODGEO,"Code.géographique"]
colnames(population_ville)[3] = "Communes"
legende
colnames(population_ville)
colnames(population_ville)
legende$CODGEO
colnames(population_ville) = legende[colnames(population_ville) %in% legende$CODGEO,"Code.géographique"]
legende
colnames(population_ville)
factorielle <-1
for (i in seq(1, 10)){
factorielle <- factorielle*i
}
print(factorielle)
factorial(10)
qplot(1:2000/100,gamma((1:2000)/100)) + scale_y_log10()+ ggthemes::theme_fivethirtyeight() + labs(title="Fonction gamma")
qplot(1:1000/100,gamma((1:1000)/100)) + scale_y_log10()+ ggthemes::theme_fivethirtyeight() + labs(title="Fonction gamma")
qplot(1:1000/100,gamma((1:1000)/100)) + ggthemes::theme_fivethirtyeight() + labs(title="Fonction gamma")
qplot(1:1000/100,gamma((1:1000)/100)) + ggthemes::theme_fivethirtyeight() + labs(title="Fonction gamma")+ annotate(x=10,y=gamma(10),label=gamma(10))
qplot(1:1000/100,gamma((1:1000)/100)) + ggthemes::theme_fivethirtyeight() + labs(title="Fonction gamma")+ annotate(x=10,y=gamma(10),label=gamma(10),geom="text")
qplot(1:1000/100,gamma((1:1000)/100)) + ggthemes::theme_fivethirtyeight() + labs(title="Fonction gamma")+ annotate(x=8,y=gamma(10),label=gamma(10),geom="text")
qplot(1:1000/100,gamma((1:1000)/100)) + ggthemes::theme_fivethirtyeight() + labs(title="Fonction gamma")+ annotate(x=9,y=gamma(10),label=gamma(10),geom="text")
qplot(1:1000/100,gamma((1:1000)/100)) + ggthemes::theme_fivethirtyeight() + labs(title="Fonction gamma")+ annotate(x=9,y=gamma(10),label=gamma(10),geom="text",col="red")
qplot(1:1000/100,gamma((1:1000)/100)) + ggthemes::theme_fivethirtyeight() + labs(title="Fonction gamma")+ annotate(x=9,y=gamma(10),label=gamma(10),geom="text",col="red")+
geom_point(aes(x=10,y=gamma(10)),colour="red")
qplot(1:1000/100,gamma((1:1000)/100)) + ggthemes::theme_fivethirtyeight() + labs(title="Fonction gamma")+ annotate(x=9,y=gamma(10),label=gamma(10),geom="text",col="red")+
geom_point(aes(x=10,y=gamma(10)),colour="red")+scale_y_log10()
#install.packages("Quandl")
# library(Quandl)
# Quandl("CITYPOP/CITY_ANGERSPAYFRANCE")
library(readr)
angers_pop <- read_table2("https://raw.githubusercontent.com/LaurentPolitis/Cours_FIN403/master/Cours_1/data/angers_pop.csv")
library(readr)
angers_pop <- read_delim("https://raw.githubusercontent.com/LaurentPolitis/Cours_FIN403/master/Cours_1/data/angers_pop.csv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(angers_pop)
#install.packages("Quandl")
# library(Quandl)
# Quandl("CITYPOP/CITY_ANGERSPAYFRANCE")
library(readr)
angers_pop <- read_delim("https://raw.githubusercontent.com/LaurentPolitis/Cours_FIN403/master/Cours_1/data/angers_pop.csv", "\t", escape_double = FALSE, trim_ws = TRUE)
class(angers_pop)
INSEE.29_000067684_A <- angers_pop
View(INSEE.29_000067684_A)
plot(x = as.Date(INSEE.29_000067684_A$Year),y=
INSEE.29_000067684_A$Population)
plot(x = as.Date(INSEE.29_000067684_A$Year),y=
INSEE.29_000067684_A$Population,type = "l")
plot(x = as.Date(INSEE.29_000067684_A$Year),y=
INSEE.29_000067684_A$Population,type = "b")
plot(x = as.Date(INSEE.29_000067684_A$Year),y=
INSEE.29_000067684_A$Population,type = "l",xlab ="Dates" ,
ylab="populations")
source('~/R/Essca/Cours_FIN403/Cours_1/cours_data_visualisation/data_mining_communes.R')
legende <- read_delim("https://raw.githubusercontent.com/LaurentPolitis/Data_Viz_Fin403/master/data/legende.csv",
";", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"),
trim_ws = TRUE)
colnames(population_ville)
setNames(nm = legende$CODGEO,object = legende$`Code géographique`)
colnames(population_ville) = setNames(nm = legende$CODGEO,object = legende$`Code géographique`)[ colnames(population_ville) ]
colnames(population_ville)
colnames(population_ville)[3] = "Communes"
source('~/R/Essca/Cours_FIN403/Cours_1/cours_data_visualisation/data_mining_communes.R')
source('~/R/Essca/Cours_FIN403/Cours_1/cours_data_visualisation/data_mining_communes.R')
# setwd("~/data-visualisationFIN403/") # pour se placer dans le répertoire courant
source("phttps://raw.githubusercontent.com/LaurentPolitis/Cours_FIN403/master/Cours_1/cours_data_visualisation/data_mining_communes.R") # charge la fonction data_import()
# setwd("~/data-visualisationFIN403/") # pour se placer dans le répertoire courant
source("phttps://raw.githubusercontent.com/LaurentPolitis/Cours_FIN403/master/Cours_1/cours_data_visualisation/data_mining_communes.R") # charge la fonction data_import()
# setwd("~/data-visualisationFIN403/") # pour se placer dans le répertoire courant
source("https://raw.githubusercontent.com/LaurentPolitis/Cours_FIN403/master/Cours_1/cours_data_visualisation/data_mining_communes.R") # charge la fonction data_import()
population_ville = data_import()
data_import()
View(population_ville)
# setwd("~/data-visualisationFIN403/") # pour se placer dans le répertoire courant
source("https://raw.githubusercontent.com/LaurentPolitis/Cours_FIN403/master/Cours_1/cours_data_visualisation/data_mining_communes.R") # charge la fonction data_import()
View(population_ville)
library(ggplot2)
ggplot(population_ville) + geom_boxplot(aes(x="France",y= `Population 2012`))
colnames(population_ville)
colnames(population_ville) = setNames(nm = legende$CODGEO,object = legende$`Code géographique`)[ colnames(population_ville) ]
colnames(population_ville)[3] = "Communes"
colnames(population_ville)[3] = "CODGEO"
colnames(population_ville) = setNames(nm = legende$CODGEO,object = legende$`Code géographique`)[ colnames(population_ville) ]
colnames(population_ville)[3] = "Communes"
colnames(population_ville)[1] = "CODGEO"
population_ville
legende <- read_delim("https://raw.githubusercontent.com/LaurentPolitis/Data_Viz_Fin403/master/data/legende.csv",
";", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"),
trim_ws = TRUE)
colnames(population_ville) = setNames(nm = legende$CODGEO,object = legende$`Code géographique`)[ colnames(population_ville) ]
colnames(population_ville)[3] = "Communes"
colnames(population_ville)[1] = "CODGEO"
population_ville
source('~/R/Essca/Cours_FIN403/Cours_1/cours_data_visualisation/data_mining_communes.R')
population_ville$CODGEO
population_ville$`Population en 2012 (princ)`
library(ggplot2)
ggplot(population_ville) + geom_boxplot(aes(x="France",y= `Population en 2012 (princ)`))
ggplot(population_ville) + geom_boxplot(aes(`Population en 2012 (princ)``,x="ville")) +
scale_y_sqrt()
boxplot(population_ville$`Population 2012 (princ)`,log="y", ylim=c(100,100000000))
boxplot(population_ville$`Population 2012 (princ)`,log="y", ylim=c(100,100000000))
ggplot(population_ville) + geom_boxplot(aes(y=`Population en 2012 (princ)`,x="France"))+
scale_y_log10() + geom_point(data= population_ville[population_ville$Communes=="Angers",],
aes(y = `Population en 2012 (princ)` ,x='France'),color="red",size=4)
boxplot(population_ville$`Population 2012 (princ)`,log="y", ylim=c(100,100000000))
boxplot(population_ville$`Population en 2012 (princ)`,log="y", ylim=c(100,100000000))
ggplot(population_ville) + geom_boxplot(aes(y=`Population 2012`,x=Region,group=Region))+
scale_y_log10() + coord_flip()
ggplot(population_ville) + geom_boxplot(aes(y=(`Population en 2012 (princ)`),x=Region,group=Region))+
scale_y_log10() + coord_flip()
ggplot(population_ville) + geom_boxplot(aes(y=(`Population en 2012 (princ)`),x=Région,group=Région))+
scale_y_log10() + coord_flip()
population_ville$Région
population_ville
opulation_ville$dom_tom
population_ville$dom_tom
ggplot(population_ville) + geom_boxplot(aes(`Population en 2012 (princ)`,x="ville"))+
scale_y_sqrt()
ggplot(population_ville) + geom_boxplot(aes(`Population en 2012 (princ)`,x="ville")) +
scale_y_log10()
unique(population_ville$Région)
legende
reg2016
reg2016 <- read_delim("https://raw.githubusercontent.com/lexman/code_officiel_geographique/2016/reg2016.txt",
"\t", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"),
trim_ws = TRUE)
reg2016
population_ville$region = setNames(nm=reg2016$REGION ,object = reg2016$NCC)[population_ville$Région]                                 )
population_ville$region = setNames(nm=reg2016$REGION ,object = reg2016$NCC)[population_ville$Région]                                 )
population_ville$Region = setNames(nm=reg2016$REGION ,object = reg2016$NCC )[population_ville$Région]
population_ville$Region
setNames(nm=reg2016$REGION ,object = reg2016$NCC )
population_ville$Région
class(population_ville$Région)
population_ville$Region = setNames(nm=as.numeric(reg2016$REGION) ,object = reg2016$NCC )[as.character(population_ville$Région)]
population_ville$Region
as.numeric(reg2016$REGION)
as.character(population_ville$Région)
setNames(nm=as.numeric(reg2016$REGION) ,object = reg2016$NCC )
as.character(population_ville$Région)
as.numeric(reg2016$REGION)
unique(as.character(population_ville$Région))
reg2016 <- read_delim("https://raw.githubusercontent.com/lexman/code_officiel_geographique/2016/correspondance_regions.tsv",
"\t", escape_double = FALSE, locale = locale(encoding = "ISO-8859-1"),
trim_ws = TRUE)
reg2016
library(readr)
correspondance_regions <- read_delim("https://raw.githubusercontent.com/lexman/code_officiel_geographique/2016/correspondance_regions.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(correspondance_regions)
reg2016 <- read_delim("https://raw.githubusercontent.com/lexman/code_officiel_geographique/2016/correspondance_regions.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
population_ville$Region = setNames(nm=as.numeric(reg2016$former_code) ,object = reg2016$former_name )[as.character(population_ville$Région)]
population_ville$Region
ggplot(population_ville + geom_boxplot(aes(y=(`Population en 2012 (princ)`),x=Région,group=Région))+
scale_y_log10() + coord_flip()
ggplot(population_ville) + geom_boxplot(aes(y=(`Population en 2012 (princ)`),x=Région,group=Région))+
scale_y_log10() + coord_flip()
ggplot(population_ville) + geom_boxplot(aes(y=(`Population en 2012 (princ)`),x=Region,group=Region))+
scale_y_log10() + coord_flip()
population_ville$ = population_ville$Region %in%
ggplot(population_ville) + geom_boxplot(aes(y=(`Population en 2012 (princ)`),x=Region,group=Region))+
scale_y_log10() + coord_flip()
population_ville$dom_tom = population_ville$Region %in%
c("MARTINIQUE","GUYANE","GUADELOUPE","MARTINIQUE","LA REUNION")
p = ggplot(population_ville,aes(y=`Population 2012`,x=Region,group=Region)) +  scale_y_log10() +
coord_flip()
p+ geom_boxplot(aes(fill=dom_tom))
population_ville$dom_tom = population_ville$Region %in%
c("MARTINIQUE","GUYANE","GUADELOUPE","MARTINIQUE","LA REUNION")
p = ggplot(population_ville,aes(y=`Population 2012 (princ)`,x=Region,group=Region)) +  scale_y_log10() +
coord_flip()
p+ geom_boxplot(aes(fill=dom_tom))
population_ville$dom_tom = population_ville$Region %in%
c("MARTINIQUE","GUYANE","GUADELOUPE","MARTINIQUE","LA REUNION")
p = ggplot(population_ville,aes(y=`Population en 2012 (princ)`,x=Region,group=Region)) +  scale_y_log10() +
coord_flip()
p+ geom_boxplot(aes(fill=dom_tom))
population_ville$dom_tom = population_ville$Region %in%
c("Martinique","Guyane","Guadeloupe","Martinique","La Réunion")
p = ggplot(population_ville,aes(y=`Population en 2012 (princ)`,x=Region,group=Region)) +  scale_y_log10() +
coord_flip()
p+ geom_boxplot(aes(fill=dom_tom))
p + geom_violin()
p  +geom_jitter(alpha=0.1) + geom_boxplot(alpha=0.7)
ggplot(population_ville) + geom_boxplot(aes(y=(`Population en 2012 (princ)`),x=Region,group=Region))+
scale_y_log10() + coord_flip()
ggplot(population_ville) + geom_boxplot(aes(y=(`Population en 2012 (princ)`),x=Region,group=Region))+
scale_y_log10() + coord_flip()
ggplot(population_ville[population_ville$Region=="Bretagne",],aes(x=`Population en 2012 (princ)`,fill=Departement)) +
geom_histogram(binwidth = 1000) +
scale_y_sqrt()+facet_wrap(facets = ~Departement)
ggplot(population_ville[population_ville$Region=="Bretagne",],aes(x=`Population en 2012 (princ)`,fill=Communes)) +
geom_histogram(binwidth = 1000) +
scale_y_sqrt()+facet_wrap(facets = ~Communes)
ggplot(population_ville[population_ville$Region=="Bretagne",],aes(x=`Population en 2012 (princ)`,fill=Communes)) +
geom_histogram(binwidth = 1000) +
scale_y_sqrt()+facet_wrap(facets = ~Communes)
library(reshape2)
tmp=population_ville[population_ville$Region=="Bretagne",c(3,4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,12,15))
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),y=value,group=Communes))
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,12,15))
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),y=value,group=Communes))
tmp.m$variable
population_ville[population_ville$Region=="Bretagne",c(3,4:10)]
tmp.m=melt(tmp)
tmp.m
tmp
tmp=population_ville[population_ville$Region=="Bretagne",c(4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,12,15))
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),y=value,group=Communes))
tmp.m$variable
tmp.m=melt(tmp)
tmp.m
as.numeric(substr(x = tmp.m$variable,12,15))
substr(x = tmp.m$variable,12,15)
as.numeric(substr(x = tmp.m$variable,15,18))
tmp=population_ville[population_ville$Region=="Bretagne",c(4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,15,18))
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),y=value,group=Communes))
tmp.m=melt(tmp)
tmp.m
library(reshape2)
tmp=population_ville[population_ville$Region=="Bretagne",c(4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,15,18))
colnames(tmp.m)[1] = "Communes"
ggplot(tmp.m$`Libellé géographique`) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),y=value,group=Communes))
library(reshape2)
tmp=population_ville[population_ville$Region=="Bretagne",c(4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,15,18))
colnames(tmp.m)[1] = "Communes"
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),y=value,group=Communes))
library(reshape2)
tmp=population_ville[population_ville$Region=="Bretagne",c(4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,15,18))
colnames(tmp.m)[1] = "Communes"
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),y=value,group=Communes))+scale_y_log10()
library(reshape2)
tmp=population_ville[population_ville$Region=="Bretagne",c(4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,15,18))
colnames(tmp.m)[1] = "Communes"
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),y=value,group=Communes))+scale_y_log10()+labs(x="Date")
tmp.m$Angers=tmp.m$Communes=="Angers" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes,colour=Angers,size=Angers))+
scale_y_sqrt()  +
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Angers=tmp.m$Communes=="Angers" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes,colour=Angers,size=Angers))+
scale_y_sqrt()  +
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Angers=tmp.m$Communes=="Vannes" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes,colour=Angers,size=Angers))+
scale_y_sqrt()  +
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
ggplot(data = tmp.m[tmp.m$Communes=="Angers",], aes(x = variable,  y =value)) +
geom_point() +geom_smooth()
ggplot(data = tmp.m[tmp.m$Communes=="Vannes",], aes(x = variable,  y =value)) +
geom_point() +geom_smooth()
ggplot(data = tmp.m[tmp.m$Communes=="Vannes",], aes(x = variable,  y =value)) +
geom_point() +geom_smooth(se = F)
ggplot(data = tmp.m[tmp.m$Communes=="Vannes",], aes(x = variable,  y =value)) +
geom_point() +geom_smooth(method = "lm")
library(reshape2)
tmp=population_ville[population_ville$Region=="Bretagne",c(4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,15,18))
colnames(tmp.m)[1] = "Communes"
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),y=value,group=Communes))+scale_y_log10()+labs(x="Date")
library(reshape2)
tmp=population_ville[population_ville$Region=="Bretagne",c(4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,15,18))
colnames(tmp.m)[1] = "Communes"
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep=""),col="black"),y=value,group=Communes))+scale_y_log10()+labs(x="Date")
library(reshape2)
tmp=population_ville[population_ville$Region=="Bretagne",c(4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,15,18))
colnames(tmp.m)[1] = "Communes"
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep=""),colour="black"),y=value,group=Communes))+scale_y_log10()+labs(x="Date")
library(reshape2)
tmp=population_ville[population_ville$Region=="Bretagne",c(4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,15,18))
colnames(tmp.m)[1] = "Communes"
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep=""),color="black"),y=value,group=Communes))+scale_y_log10()+labs(x="Date")
library(reshape2)
tmp=population_ville[population_ville$Region=="Bretagne",c(4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,15,18))
colnames(tmp.m)[1] = "Communes"
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep=""),y=value,group=Communes),color="black")+scale_y_log10()+labs(x="Date")
library(reshape2)
tmp=population_ville[population_ville$Region=="Bretagne",c(4:10)]
tmp.m=melt(tmp)
tmp.m$variable=as.numeric(substr(x = tmp.m$variable,15,18))
colnames(tmp.m)[1] = "Communes"
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),y=value,group=Communes),color="black")+scale_y_log10()+labs(x="Date")
tmp.m$Angers=tmp.m$Communes=="Angers" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes,colour=Angers,size=Angers),
color="black")+
scale_y_sqrt()  +
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Angers=tmp.m$Communes=="Angers" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value),group=Communes,
color="black")+
scale_y_sqrt()  +
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Angers=tmp.m$Communes=="Angers" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes),
color="black")+
scale_y_sqrt()  +
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Angers=tmp.m$Communes=="Angers" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes),
color="black")+
scale_y_sqrt()  +
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Angers=tmp.m$Communes=="Angers" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes),
color="black")+
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Angers=tmp.m$Communes=="Angers" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes),
color="black")+
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Angers=tmp.m$Communes=="Angers" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes),
color="black")+
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Angers=tmp.m$Communes=="Angers" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_smooth(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),y=value,group=Communes),color="black")+
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Angers=tmp.m$Communes=="Vannes" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes,color='Vannes'),
color="black")+
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Vannes=tmp.m$Communes=="Vannes" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes,color=Vannes),
color="black")+
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Vannes=tmp.m$Communes=="Vannes" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes,color=Vannes)
)+
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
tmp.m$Vannes=tmp.m$Communes=="Vannes" #"#CFCDCD", "#FFFFFF"
tmp.m=tmp.m[tmp.m$value>15000,]
ggplot(tmp.m) + geom_line(aes(x=as.Date(paste(tmp.m$variable,"-01-01",sep="")),
y=value,group=Communes,color=Vannes,size=Vannes)
)+
scale_color_manual(values=c("#5E5C57", "red"))+
scale_size_manual(values=c(1, 3))+
geom_text(data=tmp.m[tmp.m$variable==2012,],aes(x = as.Date(paste(2012,"-01-01",sep=""))
,y=(value),label=Communes))
a = 1
a
?ggplot
knitr::opts_chunk$set(echo = TRUE)
a <- "hello World ! "
b = pi
print(a)
print(paste("pi is equal to",b))
rmarkdown::render("../../cours1.Rmd")
setwd("~/R/Essca")
rmarkdown::render("cours1.Rmd")
source("Cours_FIN403/Cours_1/cours_data_visualisation/hello.R")
source("hello.R")
source("hello.R")
class(b)
length(b)
c <- c(1,2,3,4)
d <- c("a","b","c","d")
e <- c("a"=1,"b"=2,"c"=3,"d"=4)
f <- c(1,"a","d",4)
names(x=e)
e <- c("a"=1,"b"=2,"c"=3,"d"=4)
c[0]
c[1]
reticulate::repl_python()
a = [1,2,3]
quit
reticulate::repl_python()
a = [1,2,3]
print(a)
quit
reticulate::repl_python()
a = [1,2,3]
print(a)
a[1]
quit
a <- c(1,2,3)
print(a)
a[1]
ff<-factor(1:10)
f <- factor(1:10,levels = seq(from = 10,to = 1,by = -1))
ff
as.character(f)
as.numeric(f)
as.matrix(f)
cbind(f)
cbind(f,f,f)
rbind(f,f,f)
row(rbind(f,f,f))
dim(rbind(f,f,f))
as.data.frame(rbind(f,f,f))
mat <- matrix(data = rep(c.m,3), ncol=3,nrow = 4)
mat <- matrix(data = rep(f,3), ncol=3,nrow = 4)
rep(f,3)
c.m <- cbind(c)
mat <- matrix(data = rep(f,3), ncol=3,nrow = 4)
c.m <- cbind(c)
mat <- matrix(data = rep(c.m,3), ncol=3,nrow = 4)
c.m <- cbind(c)
mat <- matrix(data = rep(c.m,3), ncol=3,nrow = 4)
mat
df = data.frame("numeriques"= 1:4, lettres=c("A","B","C","D"),stringsAsFactors = F)
df
?data.frame
mat.size
View(mat)
View(df)
1==0
data.frame
data.frame
mean
mode
summary
cbind
rbind
class
