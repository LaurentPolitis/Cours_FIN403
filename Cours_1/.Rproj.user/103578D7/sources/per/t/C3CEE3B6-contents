---
title: 'Introduction : Data Visualisation'
author: "Laurent Politis"
date: "`r format(Sys.Date(),  'Le %d %B %Y')`"
output:
  slidy_presentation:
    highlight: tango
    incremental: yes
  ioslides_presentation:
    fig_caption: yes
    highlight: tango
    incremental: yes
    logo: image/Logo_Essca.jpg
editor_options:
  chunk_output_type: inline
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = T)
```



## Plan du module
Ce cours est un TD informatique constitue d'exemples et d'exercices du langage de programmation R sur la data visualisation.
Les différents points abordes durant ces 15 heures de cours sont : 

- Extraction et manipulation des données (data mining)
- Représentations graphiques 
- Valorisations de ces données par le biais de méthodes statistiques et de visualisations
- Représentations graphiques interactives (html widget, plotly ...)
- Shiny et R markdown création d'application et de rapport interactif


## Plan de ce cours

 Les 3 premières heures seront consacrées à une intro sur la data science et des rappels sur R
 
- Définition et cadre 

**Extraction et manipulation de données (data mining)**

- Principe de base de la data visualisation (infographie)
- Rappels sur R 
  * Objets R (variable, programme et fonction)
  * importer des données depuis le web 
  * graphiques simples


## Contexte  

```{r message=FALSE, warning=FALSE, paged.print=FALSE}
source('http://www.sthda.com/upload/rquery_wordcloud.r')
filePath <- "https://en.wikipedia.org/wiki/Big_data"
res<-rquery.wordcloud(filePath, type ="url", lang = "english")
```
https://fr.wikipedia.org/wiki/Big_data



## Une Réalité *Big Data*

https://www.seagate.com/fr/fr/our-story/data-age-2025

$$ 1 Zo \simeq 10^{12} Go $$

De 3500 avant J.C, jusqu'à l'an 2000 l'Homme a accumulé $5\,000\,000\,000 Go \simeq 0.005 Zo$. En 2025, les projections annonce $40 Zo$

<div class="notes">
kilooctet 	ko 	103 	210
mégaoctet 	Mo 	106 	220
gigaoctet 	Go 	109 	230
téraoctet 	To 	1012 	240
pétaoctet 	Po 	1015 	250
exaoctet 	Eo 	1018 	260
zettaoctet 	Zo 	1021 	270
yottaoctet 	Yo 	1024 	280

</div>
<CENTER>
<img src="image/big_data_size.PNG" height="200px" width="450px" />
</CENTER>

## Méga Données ?
<CENTER>

<img src="image/bigdata_vs_bio.png" height="250px" width="650px" />
</CENTER>

## Définition *Big Data*


*"Big data is a term that describes large volumes of high velocity, complex and variable data that require **advanced techniques** and technologies to enable the capture, storage, distribution, management, and analysis of the information."*

[TechAmerica Foundation's Federal Big Data Commission, 2012](https://www.sciencedirect.com/science/article/pii/S0268401214001066) 

```{r BIGDATA, fig.height=3, fig.width=8, message=FALSE, warning=FALSE, paged.print=FALSE}
library(readr)
library(ggplot2)
library(ggthemes)
multiTimeline <- read_csv("data/multiTimeline.csv",skip = 2)
multiTimeline$date <- paste0(multiTimeline$Mois,"-15")
ggplot2::ggplot(multiTimeline,aes(as.Date(date),multiTimeline$`Big data: (Dans tous les pays)`)) + geom_line(size=1) +
  geom_smooth(se = FALSE)+ theme_igray()+
  labs(x="Date",y="Recherche en %", title="Big Data",subtitle="Fréquence des recherches du mot Big Data depuis 2004",caption="https://trends.google.com/trends/explore?date=all&q=Big%20data")


```





<!-- Data science  -->

<!-- Data mining  -->

<!-- Machine Learning  -->

<!-- Deep Learning  -->






##  Data visualation   

Définition

- communiquer des données de façon visuelle

- 
[<img src="C:/Users/Laurent/Pictures/volcan_chauvet.png" height="200px" width="500px" /> ](https://www.google.fr/url?sa=t&rct=j&q=&esrc=s&source=web&cd=3&cad=rja&uact=8&ved=0ahUKEwifmvOmyLTLAhVpGZoKHfHTCVIQFggtMAI&url=http%3A%2F%2Fwww.hominides.com%2Fhtml%2Factualites%2Fvolcan-chauvet-art-parietal-0997.php&usg=AFQjCNEkHHN2mcgvHqIeMiFzsxQeHOghKw&sig2=M_S-Hnbu-FnwG4XA6kE_yg)

- transformer  des données en information

- résultats graphiques clairs et compréhensibles 



## Exemple 


- <img src="C:/Users/Laurent/Pictures/Minard.png" height="250px" width="800px" />
[un des meilleurs graphiques statistiques](https://fr.wikipedia.org/wiki/Charles_Joseph_Minard)

- http://esri.github.io/wind-js/ SIG

- http://flowingdata.com/2016/01/05/causes-of-death/ s?ries temporelles 

- http://www.nytimes.com/interactive/2015/03/19/upshot/3d-yield-curve-economic-growth.html 3D 

##Principes d'infographie

 - mémoire courte quelques secondes d'attention ou de réflexion
 - un max de $\simeq 11$ types de couleurs ou de styles différents facilement distinguables 
 - notion de perspective données et vérités 

 

- <img src="C:/Users/Laurent/Pictures/pay_rolls.PNG" height="290px" width="490px" />
source "How to Lie With Statistics", 1954, *Huff*

## Science sous jacente les statistiques 
<img src="C:/Users/Laurent/Pictures/huff1.jpg" height="450px" width="400px" />
source "How to Lie With Statistics", 1954, *Huff*


## Un graphique vaut mille mots 

```{r motss}
library(ggplot2)
df = data.frame(x=rnorm(1:84),y=rnorm(1:84),
                lettres=LETTERS[rep(seq( from = 1, to = 28 ),3)])

df[!complete.cases(df),"lettres"]="A"
df$test= ifelse(df$lettres=="A","A","pas A")
ggplot(df,aes(x=x,y=y))+geom_text(aes(label=lettres))
#ggplot(df,aes(x=x,y=y,colour=test))+geom_text(aes(label=lettres))

```

## Combien y a t il de A ?  


```{r mot1}
ggplot(df,aes(x=x,y=y,colour=test,size=test))+geom_text(aes(label=lettres))+labs(colour="",size="")+scale_color_manual(values = c("red","black"))+scale_size_manual(values = c(6.5,4))

```

* Réponse : 9

<!-- ## Regardons le code  -->

<!-- ```{r mot_description, echo=TRUE, message=TRUE,eval=FALSE} -->
<!-- # Partie setup  -->
<!-- library(ggplot2) -->

<!-- # Partie data mining et calcul  -->

<!-- df = data.frame(x=rnorm(1:87),y=rnorm(1:87), -->
<!--                 lettres=LETTERS[rep(seq( from = 1, to = 27 ),3)]) -->
<!-- df[!complete.cases(df),"lettres"]="A" -->
<!-- df$test= ifelse(df$lettres=="A","A","pas A") -->


<!-- # Partie data visualisation -->

<!-- ggplot(df,aes(x=x,y=y))+geom_text(aes(label=lettres)) -->
<!-- #ggplot(df,aes(x=x,y=y,colour=test))+geom_text(aes(label=lettres)) -->

<!-- ``` -->



## Pourquoi R 

- Open source & Gratuit 
- Facile à installer sur les systèmes d'exploitations Linux, Windows et Apple 
- Une très grosse communauté de développeurs et d'utilisateurs 
- Facile à utiliser pour des non-programmeurs pour des calculs statistiques 
- Possibilité de créer des illustrations, applications web et même la présentation que vous lisez actuellement 
          <img src="C:/Users/Laurent/Pictures/run_Paris.png" height="200px" width="400px" /> 

## Installation de R 


**Sur Windows**

http://cran.r-project.org/bin/windows/base/  

 télécharger la dernière version de R en fonction de votre ordinateur 32 bit ou 64 bit (pour le savoir aller sur *paramétres>système>information système*)


**Sur Apple**

http://cran.r-project.org/bin/macosx/ et t?l?charger la dernières version de R

**Pour installer Rstudio**


 http://www.rstudio.com/ide/ pour t?l?charger la dernières version et installer l'environnement de travail *R studio* en suivant les indications du site

##  Pour ?tre bon en R ...



- savoir demander de l'aide  une qualité essentielle d'un programmeur 

  * [stack overflow](http://stackoverflow.com/) forum en ligne
  * suivre des exemples  R blogger, git_hub ...
  * commandes  en console R `??` et `?` 
  * utiliser un environnement de travail int?gr? (IDE) comme Rstudio (facilite la programmation, auto indentation, variables historiques, etc ...)

## Présentation de Rstudio 
  <img src="C:/Users/Laurent/Pictures/IDE.PNG" height="400px" width="800px" />


## Codes sources, programmes et scripts 
  <img src="C:/Users/Laurent/Pictures/IDE_1.PNG" height="400px" width="800px" />
  

## Codes sources, programmes et scripts 

- créer un fichier texte hello.R 
- écrire votre  premier programme en R

```{r premier_prog, echo=TRUE, message=TRUE,eval=FALSE}
#  le Diése sert à commenter le reste de la la ligne  
# tout ce qui est écrit ici ne sera pas exécuté par R  
# indiquer le but du programme ou toutes autres informations  
# Nom  et Prénom dates 
a <- "hello World ! "
b = pi
print(a)
print(paste("pi is equal to",b))


```



## Comment l'exécuter ? 

A l'aide de la console R : 

  <img src="C:/Users/Laurent/Pictures/IDE_2.PNG" height="330px" width="800px" />
  
```{r premier_prog_console, echo=TRUE, message=TRUE,eval=TRUE}
source("cours_data_visualisation/hello.R")

```

## L'environnement de R 

Ce qui a changé

  <img src="C:/Users/Laurent/Pictures/IDE4.PNG" height="300px" width="800px" />
  
* Ajout de la commande lanc?e dans la console R dans l'historique 
* Ajout de la variable `a` dans l'environnement R (commande ls() pour lister les objets)

## Les variables dans R

```{r console, echo=TRUE, message=TRUE,eval=TRUE}
class(a)

b <- 1 
class(b)

#vecteurs
c <- c(1,2,3,4)
d <- c("a","b","c","d")
e <- c("a"=1,"b"=2,"c"=3,"d"=4)
f <- c(1,"a","d",4)


```




##  Les variables dans R suite  



```{r console, echo=TRUE, message=TRUE,eval=TRUE}

## factor 



ff<-factor(1:10)

f <- factor(1:10,levels = seq(from = 10,to = 1,by = -1))

ff

f

```


##  et les classes  


```{r variables, echo=TRUE, message=TRUE,eval=TRUE}
class(c)
class(d)
class(e)
class(f)
```
 attention f ne pas mélanger les types de variables

## Les Matrices 

```{r matrix, echo=TRUE, message=TRUE}
f.m <- cbind(f)
f.m
c.m <- cbind(c)
c.m
```
## Matrices numériques ou  caractéres
```{r matrix1, echo=TRUE, message=TRUE}
m.m <- cbind(f.m,c.m)
m.m
n.m <- cbind(c.m,c.m)
n.m
```


## Matrices et Data frames
```{r dataframe, echo=TRUE, message=TRUE}
mat <- matrix(data = c.m, ncol=4,nrow = 3)
mat
df = data.frame("numeriques"= c, lettres=f,stringsAsFactors = F)
df 
```

## Matrices et Data frames

```{r dataframe1, echo=TRUE, message=TRUE}
class(mat[,1])
class(df[,"numeriques"])
class(df[,"lettres"])
```

## Passer d'un type ? l'autre
```{r as, echo=TRUE, message=TRUE}
as.matrix(df)

as.numeric(f)

```

## Relation logique
```{r logique, echo=TRUE, message=TRUE}
1==0
1>=0
1<=0
"a" == "b"
```

## Fonctions 
les commandes matrix(), cbind(), data.frame() sont des fonctions codées 

**Définition**

[<img src="C:/Users/Laurent/Pictures/fonction_R.png" height="150px" width="600px" />](http://biol09.biol.umontreal.ca/BIO2041e/CreerFonctionR.pdf)


* un objet R
* des commandes R ?crites dans un fichier qui effectuent une t?che pr?d?finie
* permet de faire automatiquement la m?me t?che plusieurs fois 
* garder un programme plus lisible 
* un gain de temps ? long terme 

## Ecrire votre premi?re fonction 
 ?crire le m?me code que pr?c?demment sous forme de fonction dans un nouveau fichier hello_fun.R

```{r fonction2, echo=TRUE, message=TRUE}
hello <-function(texte=NULL){   # argument ou données d'entr?e

  #code manipulant les données d'entr?e
 
return(texte)  #  return  renvoie le r?sultat de la fonction  
}
 source("cours_data_visualisation/hello_fun.R")

 hello("hello world !")
```

## Un peu plus complique 
un petit ajout le nom de l'utilisateur
 
```{r fonction1, echo=TRUE, message=TRUE}
hello <-function(texte=NULL){  
  #on souhaite coller le nom de l'utilisateur ? "hello world"
  # on r?cup?re le nom de l'utilisateur 
 nom <- Sys.getenv("USERNAME") # fonction trouv?e via une recherche web
   # on colle le nom de l'utilisateur
 texte <- paste(nom,texte)
 
return(texte)  #  return  renvoie le r?sultat de la fonction  
}

 source("cours_data_visualisation/hello_fun2.R")

 hello("hello world !")
```

## Fonction cor()

Vous avez ?crit une fonction comme les fonctions de base de R exemple cor() qui calcule la corr?lation des données de 2 vecteurs ou des données contenues dans une matrice 

```{r fonction, echo=TRUE, message=TRUE}
cor
```

## Importer des données  
Importer des données via [quandl](https://www.quandl.com/)

Par exemple l'?volution de la population ? Angers 

https://www.quandl.com/data/INSEE/29_000067684_A-Demography-Municipal-population-at-the-census-Angers

* T?l?charger les données sous format .csv 
* ouvrir les données via R m?thode graphique 
![Import Dataset > from Local File](C:/Users/Laurent/Pictures/IDE5.PNG)

## Importer des données  sous R 

Import Dataset > from Local File
![Import Dataset > from Local File](C:/Users/Laurent/Pictures/IDE6.PNG)

Puis vérifier que les données sont sous le bon format 

<img src="C:/Users/Laurent/Pictures/IDE7.png" height="220px" width="300px" />

## Importer des données sous console R 

```{r importer,  echo=TRUE, message=TRUE}
read.csv("C:/Users/Laurent/Downloads/INSEE-29_000067684_A.csv")

class(read.csv("C:/Users/Laurent/Downloads/INSEE-29_000067684_A.csv"))

```


## Visualiser les données
```{r view,echo=TRUE, message=TRUE,eval=FALSE}
INSEE.29_000067684_A <- read.csv("C:/Users/Laurent/Downloads/
                                 INSEE-29_000067684_A.csv")
View(INSEE.29_000067684_A)
```

```{r,echo=FALSE, message=FALSE,eval=TRUE}
INSEE.29_000067684_A <- read.csv("C:/Users/Laurent/Downloads/INSEE-29_000067684_A.csv")
```
<img src="C:/Users/Laurent/Pictures/IDE8.png" height="280px" width="300px" />

## Visualiser les données
```{r plot,echo=TRUE, message=TRUE,eval=TRUE}
plot(x = as.Date(INSEE.29_000067684_A$Date),y=
       INSEE.29_000067684_A$Value)

```

## Changer  le style du graphe
```{r plot1,echo=TRUE, message=TRUE,eval=TRUE}
plot(x = as.Date(INSEE.29_000067684_A$Date),y=
       INSEE.29_000067684_A$Value,type = "l")

```

## Changer  le style du graphe
```{r plot3,echo=TRUE, message=TRUE,eval=TRUE}
plot(x = as.Date(INSEE.29_000067684_A$Date),y=
       INSEE.29_000067684_A$Value,type = "b")

```


## Légendes
```{r plot2,echo=TRUE, message=TRUE,eval=TRUE}
plot(x = as.Date(INSEE.29_000067684_A$Date),y=
       INSEE.29_000067684_A$Value,type = "l",xlab ="Dates" ,
     ylab="populations")

```



